name: libcamera-app smoke tests

on:
  pull_request:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  NUM_JOBS: 4
  GCC_COMPILER: "-DCMAKE_C_COMPILER=/usr/bin/gcc -DCMAKE_CXX_COMPILER=/usr/bin/g++"
  CLANG_COMPILER: "-DCMAKE_C_COMPILER=/usr/bin/clang -DCMAKE_CXX_COMPILER=/usr/bin/clang++"
  CMAKE_OTHER_FLAGS: "-DENABLE_TFLITE=1"

jobs:
  build-test-gcc:

    runs-on: [ self-hosted ]

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
        clean: true

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} ${{env.GCC_COMPILER}} ${{env.CMAKE_OTHER_FLAGS}}
      timeout-minutes: 5

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --parallel ${{env.NUM_JOBS}}
      timeout-minutes: 10

    - name: Tar files
      run: tar -cvf build-artifacts-gcc.tar -C ${{github.workspace}}/build .

    - name: Upload build files
      uses: actions/upload-artifact@v2
      with:
        name: build-artifacts-gcc
        path: build-artifacts-gcc.tar
        retention-days: 21

  build-test-clang:

    runs-on: [ self-hosted ]

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
        clean: true

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} ${{env.CLANG_COMPILER}} ${{env.CMAKE_OTHER_FLAGS}}
      timeout-minutes: 5

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --parallel ${{env.NUM_JOBS}}
      timeout-minutes: 10

    - name: Tar files
      run: tar -cvf build-artifacts-clang.tar -C ${{github.workspace}}/build .

    - name: Upload build files
      uses: actions/upload-artifact@v2
      with:
        name: build-artifacts-clang
        path: build-artifacts-clang.tar
        retention-days: 21

  run-test-imx219:

    runs-on: [ self-hosted, imx219 ]
    needs: build-test-gcc

    steps:

    - name: Create test output dir
      run: mkdir -p ${{github.workspace}}/test_output

    - name: Remove existing build directory
      run: rm -rf ${{github.workspace}}/build

    - name: Download build
      uses: actions/download-artifact@v2
      with:
        name: build-artifacts-gcc
        path: ${{github.workspace}}

    - name: Untar files
      run: tar -xvf build-artifacts-gcc.tar --one-top-level=build

    - name: Test
      run: ${{github.workspace}}/test.py --exe-dir ${{github.workspace}}/build --output-dir ${{github.workspace}}/test_output
      timeout-minutes: 5

    - name: Upload test output
      if: ${{ failure() }}
      uses: actions/upload-artifact@v2
      with:
        name: test-artifacts-imx219
        path: ${{github.workspace}}/test_output/
        retention-days: 21

  run-test-imx477:

    runs-on: [ self-hosted, imx477 ]
    needs: build-test-gcc

    steps:

    - name: Create test output dir
      run: mkdir -p ${{github.workspace}}/test_output

    - name: Remove existing build directory
      run: rm -rf ${{github.workspace}}/build

    - name: Download build
      uses: actions/download-artifact@v2
      with:
        name: build-artifacts-gcc
        path: ${{github.workspace}}

    - name: Untar files
      run: tar -xvf build-artifacts-gcc.tar --one-top-level=build

    - name: Test
      run: ${{github.workspace}}/test.py --exe-dir ${{github.workspace}}/build --output-dir ${{github.workspace}}/test_output
      timeout-minutes: 5

    - name: Upload test output
      if: ${{ failure() }}
      uses: actions/upload-artifact@v2
      with:
        name: test-artifacts-imx477
        path: ${{github.workspace}}/test_output/
        retention-days: 21
